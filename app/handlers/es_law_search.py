# app/handlers/es_law_search.py

import logging
from typing import List
from elasticsearch import Elasticsearch

# –ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
ES_HOST = "http://localhost:9200"
ES_USER = "elastic"
ES_PASS = "GIkb8BKzkXK7i2blnG2O"
ES_INDEX_NAME = "ruslawod_index"



def search_law_chunks(query: str, top_n: int = 10) -> List[str]:
    """
    –ò—â–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —á–∞–Ω–∫–∏ –≤ Elasticsearch –ø–æ –ø–æ–ª—é text_chunk,
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤ (—Å—Ç—Ä–æ–∫).
    """
    try:
        # –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
        es = Elasticsearch(
            [ES_HOST],
            basic_auth=(ES_USER, ES_PASS)
        )

        # –£–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º multi_match
        body = {
            "size": top_n,
            "query": {
                "multi_match": {
                    "query": query,
                    "fields": ["text_chunk^3", "title^2", "document_number"],
                    "type": "best_fields",
                    "fuzziness": "AUTO"
                }
            }
        }

        response = es.search(index=ES_INDEX_NAME, body=body)
        hits = response["hits"]["hits"]

        results = []
        for hit in hits:
            source = hit["_source"]
            chunk_text = source["text_chunk"]
            document_title = source.get("title", "")
            document_number = source.get("document_number", "")
            results.append(f"–î–æ–∫—É–º–µ–Ω—Ç: {document_title} ({document_number})\n{chunk_text}")

        logging.info(f"üîç [ES] –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —á–∞–Ω–∫–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}'.")
        return results

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ Elasticsearch: {e}")
        return []
